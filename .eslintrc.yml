---
env:
  browser: true
  commonjs: true
  es2020: true
  node: true
  shared-node-browser: true
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaFeatures:
    jsx: true
  project: './tsconfig.json'
extends:
  - 'eslint:recommended'
  - plugin:@typescript-eslint/recommended
  - plugin:ramda/recommended
  - plugin:react-hooks/recommended
  - plugin:react/recommended
  - standard
  - standard-jsx
  - standard-react
  - standard-with-typescript
plugins:
  - '@typescript-eslint'
  - ramda
  - react
  - react-hooks
  - sort-destructure-keys
settings:
  react:
    version: '17'

rules:
  react/jsx-curly-newline:
    - warn
    - consistent
  react/jsx-curly-spacing:
    - warn
    - children:
        when: always
      attributes:
        when: always
      when: always
      spacing:
        objectLiterals: never
  react/prop-types: 'off'
  react/react-in-jsx-scope: 'off'

  '@typescript-eslint/no-misused-promises': 'off'
  '@typescript-eslint/no-unused-expressions':
    - warn
    - allowShortCircuit: true
      allowTaggedTemplates: true
      allowTernary: true
  '@typescript-eslint/no-unused-vars':
    - error
    - argsIgnorePattern: '^_.+'
      varsIgnorePattern: '^_.+'
  '@typescript-eslint/restrict-template-expressions': 'off'

  comma-dangle:
    - warn
    - always-multiline
  object-curly-spacing:
    - warn
    - always
    - objectsInObjects: false
  template-curly-spacing:
    - warn
    - always

overrides:
  - files: '**/config/**'
    rules:
      indent: 'off'
      sort-keys: 'off'
      sort-vars: 'off'
  - files: '**/*.js'
    rules:
      '@typescript-eslint/no-var-requires': 'off'
